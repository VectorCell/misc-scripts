#!/bin/bash

if [ -t 1 ]; then
	echo "ERROR: will not output encrypted data to a terminal (it would be ugly and useless"
	exit 1
fi

# gpg is slow, appears to not use AES-NI

PROG=gpg
if [ -n "$(which gpg2)" ]; then
	PROG=gpg2
fi

if [ -n "$1" ]; then
	$PROG \
		--compress-algo none \
		--symmetric \
		--s2k-mode 3 \
		--s2k-count 65011712 \
		--s2k-digest-algo SHA512 \
		--s2k-cipher-algo AES256 \
		--cipher-algo AES256 \
		--batch \
		--passphrase-file "$1" \
		-
	exit $?
else

	1>&2 echo "Prompting for password on desktop (GUI) ..."

	$PROG \
		--symmetric \
		--s2k-mode 3 \
		--s2k-count 65011712 \
		--s2k-digest-algo SHA512 \
		--s2k-cipher-algo AES256 \
		--cipher-algo AES256 \
		-
	exit $?
fi

# this is the old script, which has been broken due to openssl:

VERSION=$(openssl version | awk '{print $2}')
VERSION_MAJOR=$(echo $VERSION | tr '.' ' ' | awk '{print $1}')
VERSION_MINOR=$(echo $VERSION | tr '.' ' ' | awk '{print $2}')

#echo "VERSION:       $VERSION"
#echo "VERSION_MAJOR: $VERSION_MAJOR"
#echo "VERSION_MINOR: $VERSION_MINOR"

if [ -n "$1" ]; then
	if [ $VERSION_MAJOR == 1 ] && [ $VERSION_MINOR -gt 0 ]; then
		# newer openssl
		openssl enc -aes-256-cbc -pbkdf2 -salt -pass file:"$1"
	elif [ $VERSION_MAJOR == 1 ] && [ $VERSION_MINOR == 0 ]; then
		# openssl 1.0.x, in Ubuntu 16.04 LTS
		openssl enc -aes-256-cbc -salt -pass file:"$1"
	fi
else
	# will prompt for password
	if [ $VERSION_MAJOR == 1 ] && [ $VERSION_MINOR -gt 0 ]; then
		# newer openssl
		openssl enc -aes-256-cbc -pbkdf2 -salt
	elif [ $VERSION_MAJOR == 1 ] && [ $VERSION_MINOR == 0 ]; then
		# openssl 1.0.x, in Ubuntu 16.04 LTS
		openssl enc -aes-256-cbc -salt
	fi
fi
