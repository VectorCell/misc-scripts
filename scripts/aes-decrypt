#!/bin/bash

# gpg is slow, appears to not use AES-NI

PROG=gpg
if [ -n "$(which gpg2)" ]; then
	PROG=gpg2
fi

if [ -n "$1" ]; then
	$PROG \
		-d \
		--batch \
		--passphrase-file "$1" \
		-
	exit $?
else
	1>&2 echo "Prompting for password on desktop (GUI) (if applicable) ..."
	$PROG -d -
	exit $?
fi

# this is the old script, which has been broken due to openssl:

VERSION=$(openssl version | awk '{print $2}')
VERSION_MAJOR=$(echo $VERSION | tr '.' ' ' | awk '{print $1}')
VERSION_MINOR=$(echo $VERSION | tr '.' ' ' | awk '{print $2}')

if [ -n "$1" ]; then
	if [ $VERSION_MAJOR == 1 ] && [ $VERSION_MINOR -gt 0 ]; then
		# newer openssl
		openssl enc -d -aes-256-cbc -pbkdf2 -salt -pass file:"$1"
	elif [ $VERSION_MAJOR == 1 ] && [ $VERSION_MINOR == 0 ]; then
		# openssl 1.0.x, in Ubuntu 16.04 LTS
		openssl enc -d -aes-256-cbc -salt -pass file:"$1"
	fi
else
	# will prompt for password
	if [ $VERSION_MAJOR == 1 ] && [ $VERSION_MINOR -gt 0 ]; then
		# newer openssl
		openssl enc -d -aes-256-cbc -pbkdf2 -salt
	elif [ $VERSION_MAJOR == 1 ] && [ $VERSION_MINOR == 0 ]; then
		# openssl 1.0.x, in Ubuntu 16.04 LTS
		openssl enc -d -aes-256-cbc -salt
	fi

fi
