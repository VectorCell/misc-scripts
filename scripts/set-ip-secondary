#!/bin/bash

function current_ip_addr {
	DEVICE=$1
	ip addr show dev $DEVICE | grep inet | grep -v inet6 | awk '{print $2}' | head -n 1
}

function remove_ip_addr {
	ADDRESS=$1
	DEVICE=$2
	sudo ip addr del $ADDRESS dev $DEVICE
}

function set_ip_addr {
	ADDRESS=$1
	DEVICE=$2
	CURRENT_IP=$(current_ip_addr $DEVICE)
	if [ "$ADDRESS" == "$CURRENT_IP" ]; then
		echo "device $DEVICE already has target IP $ADDRESS"
		return
	fi
	if [ -n "$CURRENT_IP" ]; then
		echo "device $DEVICE already has IP $CURRENT_IP, removing ..."
		remove_ip_addr $ADDRESS $DEVICE
	fi
	sudo ip link set $DEVICE up
	sudo ip addr add $ADDRESS dev $DEVICE
	CURRENT_IP=$(current_ip_addr $DEVICE)
	echo "The IP address for device $DEVICE is now $CURRENT_IP"
}

if [ -n "$1" ]; then
	echo "Calling with arguments: $@"
	echo "Assuming this means to clear the configuration(s)..."
	DEVICE=enp4s0f0
	CURRENT_IP=$(current_ip_addr $DEVICE)
	remove_ip_addr $CURRENT_IP $DEVICE
	DEVICE=enp4s0f1
	CURRENT_IP=$(current_ip_addr $DEVICE)
	remove_ip_addr $CURRENT_IP $DEVICE
	exit
fi

if [ "green" == "$HOSTNAME" ]; then
	echo "setting IP addresses for green"
	set_ip_addr 172.16.1.1/24 enp4s0f0
	set_ip_addr 172.16.2.1/24 enp4s0f1
fi
if [ "tank" == "$HOSTNAME" ]; then
	echo "setting IP addresses for tank"
	set_ip_addr 172.16.1.2/24 enp4s0f0
	set_ip_addr 172.16.2.2/24 enp4s0f1
fi
if [ "nissan" == "$HOSTNAME" ]; then
	echo "setting IP addresses for nissan"
	set_ip_addr 172.16.1.3/24 enp4s0f0
	set_ip_addr 172.16.2.3/24 enp4s0f1
fi
